$maxWidthContainer: 1920;

// @include adaptive-value($property, $startSize, $minSize, 1920, 320, 1);
@mixin adaptive-value($property, $startSize, $minSize, $maxWidth, $minWidth, $type) {
    $addSize: $startSize - $minSize;
    @if $type==1 {
        // Только если меньше контейнера
        #{$property}: $startSize + px;
        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContainer - $minWidth}));
        }
    } @else if $type==2 {
        // Только если больше контейнера
        #{$property}: $startSize + px;
        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidth - $minWidth}));
        }
    } @else {
        // Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidth - $minWidth}));
    }
}

// @include adaptive-line-height($lineHeight, $fontSize);
@mixin adaptive-line-height($lineHeight, $fontSize) {
    $resultOne: ($lineHeight - $fontSize) * 100 / $fontSize;
    $finalResult: $resultOne + 100;
    line-height: #{$finalResult + "%"};
}